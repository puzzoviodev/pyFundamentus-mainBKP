class PVPEvaluator:
    def __init__(self):
        self._p_vp = None
        self._classificacao = None
        self._faixa = None
        self._descricao = None
        self._riscos = None
        self._referencia_cruzada = None
        self._definicao = '''
        O Pre√ßo/Valor Patrimonial (P/VP) compara o pre√ßo da a√ß√£o ao valor patrimonial por a√ß√£o, calculado
        como (Pre√ßo da A√ß√£o / Valor Patrimonial por A√ß√£o). √â um indicador de valuation que avalia se a
        a√ß√£o est√° cara ou barata em rela√ß√£o aos ativos l√≠quidos da empresa. Um P/VP baixo sugere
        subvaloriza√ß√£o, enquanto um valor alto indica sobrevaloriza√ß√£o ou expectativas de crescimento.
        '''
        self._agrupador = 'Valuation'
        self._formula = 'P/VP = Pre√ßo da A√ß√£o / Valor Patrimonial por A√ß√£o'

    @property
    def p_vp(self):
        return self._p_vp

    @p_vp.setter
    def p_vp(self, valor):
        self._p_vp = valor
        self._avaliar()

    @property
    def classificacao(self):
        return self._classificacao

    @property
    def faixa(self):
        return self._faixa

    @property
    def descricao(self):
        return self._descricao

    @property
    def riscos(self):
        return self._riscos

    @property
    def referencia_cruzada(self):
        return self._referencia_cruzada

    @property
    def definicao(self):
        return self._definicao.strip()

    @property
    def agrupador(self):
        return self._agrupador

    @property
    def formula(self):
        return self._formula

    def _avaliar(self):
        try:
            p_vp = self._p_vp
            if p_vp < 0:
                self._set_resultado(
                    'Cr√≠tico', 'P/VP < 0',
                    '''Um P/VP negativo indica que o patrim√¥nio l√≠quido da empresa √© negativo, sugerindo s√©rias
                    dificuldades financeiras. Isso √© comum em empresas em crise, como a Oi (OIBR3).
                    Recomenda√ß√µes: Indicado apenas para investidores especulativos com alta toler√¢ncia a risco.''',
                    'Alta probabilidade de fal√™ncia ou dilui√ß√£o acion√°ria em reestrutura√ß√µes.',
                    'Avalie evaluate_debt_to_equity para sa√∫de financeira, evaluate_cash_flow para gera√ß√£o de caixa e evaluate_peg_ratio para perspectivas de crescimento.'
                )
            elif 0 <= p_vp <= 1:
                self._set_resultado(
                    '√ìtimo', '0 <= P/VP <= 1',
                    '''Subvaloriza√ß√£o significativa. Exemplo: Vale (VALE3) teve P/VP ~0.8 em 2023.
                    Recomenda√ß√µes: Ideal para investidores de longo prazo.''',
                    'Patrim√¥nio pode incluir ativos obsoletos.',
                    'Analise evaluate_vpa para valor patrimonial e evaluate_roe para rentabilidade.'
                )
            elif 1 < p_vp <= 1.5:
                self._set_resultado(
                    'Moderado', '1 < P/VP <= 1.5',
                    '''Valuation justo, comum em empresas est√°veis. Exemplo: Ambev (ABEV3) com P/VP ~1.3.
                    Recomenda√ß√µes: Ideal para portf√≥lios diversificados.''',
                    'Estagna√ß√£o em setores maduros.',
                    'Compare com evaluate_p_l para lucros e evaluate_pl_ativos para estrutura.'
                )
            elif 1.5 < p_vp <= 2:
                self._set_resultado(
                    'Ruim', '1.5 < P/VP <= 2',
                    '''Sobrevaloriza√ß√£o moderada. Exemplo: Raia Drogasil (RADL3) com P/VP ~1.8.
                    Recomenda√ß√µes: Validar expans√£o e retorno sobre patrim√¥nio.''',
                    'Expectativas n√£o realizadas podem levar a corre√ß√µes.',
                    'Verifique evaluate_peg_ratio para crescimento e evaluate_evebitda para valuation.'
                )
            elif 2 < p_vp <= 3:
                self._set_resultado(
                    'P√©ssimo', '2 < P/VP <= 3',
                    '''Valuation elevado. Exemplo: Localiza (RENT3) com P/VP ~2.5.
                    Recomenda√ß√µes: Conservadores devem evitar.''',
                    'Sensibilidade a mudan√ßas econ√¥micas.',
                    'Combine com evaluate_psr para receita e evaluate_margem_liquida para efici√™ncia.'
                )
            elif p_vp > 3:
                self._set_resultado(
                    'Fora da faixa', 'P/VP > 3',
                    '''Especula√ß√£o. Exemplo: Nubank (NUBR33) com P/VP > 3.
                    Recomenda√ß√µes: Alto risco, adequado para especulativos.''',
                    'Bolhas especulativas.',
                    'Avalie evaluate_p_ativo para ativos e evaluate_crescimento_receita para tend√™ncias.'
                )
        except Exception as e:
            self._set_erro(str(e))

    def _set_resultado(self, classificacao, faixa, descricao, riscos, referencia):
        self._classificacao = classificacao
        self._faixa = faixa
        self._descricao = descricao.strip()
        self._riscos = riscos.strip()
        self._referencia_cruzada = referencia.strip()

    def _set_erro(self, mensagem):
        self._classificacao = 'Erro'
        self._faixa = 'N/A'
        self._descricao = f'''
            Ocorreu um erro ao processar o P/VP: {mensagem}.
            Verifique os dados de entrada e assegure que sejam num√©ricos v√°lidos.
        '''
        self._riscos = ''
        self._referencia_cruzada = ''


# Exemplo de uso
if __name__ == "__main__":
    avaliador = PVPEvaluator()
    avaliador.p_vp = 1.2

    print("üìä Resultado da Avalia√ß√£o:")
    print(f"Classifica√ß√£o: {avaliador.classificacao}")
    print(f"Faixa: {avaliador.faixa}")
    print(f"Descri√ß√£o: {avaliador.descricao}")
    print(f"Riscos: {avaliador.riscos}")
    print(f"Refer√™ncia Cruzada: {avaliador.referencia_cruzada}")
    print(f"F√≥rmula: {avaliador.formula}")
    print(f"Defini√ß√£o: {avaliador.definicao}")
